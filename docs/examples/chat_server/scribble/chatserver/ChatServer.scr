module chatserver.ChatServer;

data <java> "java.lang.Integer" from "rt.jar" as RoomNumber;
data <java> "java.lang.Double" from "rt.jar" as Port;
data <java> "java.lang.String" from "rt.jar" as String;
data <java> "java.lang.Boolean" from "rt.jar" as StringList;

global protocol ChatServer (role C, role S) {
    choice at C {
        LookupRoom(RoomNumber) from C to S ;
        choice at S {
            RoomPort(RoomNumber, Port) from S to C ;
        } or {
        RoomNotFound(RoomNumber) from S to C ;
        }
        do ChatServer(C , S ) ;
    } or {
        CreateRoom(RoomNumber) from C to S ;
        choice at S {
            CreateRoomSuccess(RoomNumber) from S to C ;
        } or {
            RoomExists(RoomNumber) from S to C ;
        }
        do ChatServer(C , S) ;
    } or {
        ListRooms() from C to S ;
        RoomList(StringList) from S to C ;
        do ChatServer(C , S) ;
    } or {
        Bye(String) from C to S ;
    }
}


global protocol ChatSessionCtoR (role C, role R) {
    choice at C {
        OutgoingChatMessage(String) from C to R ;
        do ChatSessionCtoR(C , R) ;
    } or {
        LeaveRoom() from C to R ;
    }
}

global protocol ChatSessionRtoC (role R, role C) {
    choice at R {
        IncomingChatMessage(String) from R to C ;
        do ChatSessionRtoC(R, C) ;
    } or {
        Bye() from R to C ;
    }
}
